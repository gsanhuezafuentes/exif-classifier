// Code generated by mockery v2.40.1. DO NOT EDIT.

package organize

import mock "github.com/stretchr/testify/mock"

// MockOrganizer is an autogenerated mock type for the Organizer type
type MockOrganizer struct {
	mock.Mock
}

type MockOrganizer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockOrganizer) EXPECT() *MockOrganizer_Expecter {
	return &MockOrganizer_Expecter{mock: &_m.Mock}
}

// OrganizeImgsByDate provides a mock function with given fields:
func (_m *MockOrganizer) OrganizeImgsByDate() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for OrganizeImgsByDate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockOrganizer_OrganizeImgsByDate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OrganizeImgsByDate'
type MockOrganizer_OrganizeImgsByDate_Call struct {
	*mock.Call
}

// OrganizeImgsByDate is a helper method to define mock.On call
func (_e *MockOrganizer_Expecter) OrganizeImgsByDate() *MockOrganizer_OrganizeImgsByDate_Call {
	return &MockOrganizer_OrganizeImgsByDate_Call{Call: _e.mock.On("OrganizeImgsByDate")}
}

func (_c *MockOrganizer_OrganizeImgsByDate_Call) Run(run func()) *MockOrganizer_OrganizeImgsByDate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockOrganizer_OrganizeImgsByDate_Call) Return(_a0 error) *MockOrganizer_OrganizeImgsByDate_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockOrganizer_OrganizeImgsByDate_Call) RunAndReturn(run func() error) *MockOrganizer_OrganizeImgsByDate_Call {
	_c.Call.Return(run)
	return _c
}

// OrganizeImgsByLens provides a mock function with given fields:
func (_m *MockOrganizer) OrganizeImgsByLens() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for OrganizeImgsByLens")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockOrganizer_OrganizeImgsByLens_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OrganizeImgsByLens'
type MockOrganizer_OrganizeImgsByLens_Call struct {
	*mock.Call
}

// OrganizeImgsByLens is a helper method to define mock.On call
func (_e *MockOrganizer_Expecter) OrganizeImgsByLens() *MockOrganizer_OrganizeImgsByLens_Call {
	return &MockOrganizer_OrganizeImgsByLens_Call{Call: _e.mock.On("OrganizeImgsByLens")}
}

func (_c *MockOrganizer_OrganizeImgsByLens_Call) Run(run func()) *MockOrganizer_OrganizeImgsByLens_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockOrganizer_OrganizeImgsByLens_Call) Return(_a0 error) *MockOrganizer_OrganizeImgsByLens_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockOrganizer_OrganizeImgsByLens_Call) RunAndReturn(run func() error) *MockOrganizer_OrganizeImgsByLens_Call {
	_c.Call.Return(run)
	return _c
}

// OrganizeImgsByOrientation provides a mock function with given fields:
func (_m *MockOrganizer) OrganizeImgsByOrientation() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for OrganizeImgsByOrientation")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockOrganizer_OrganizeImgsByOrientation_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OrganizeImgsByOrientation'
type MockOrganizer_OrganizeImgsByOrientation_Call struct {
	*mock.Call
}

// OrganizeImgsByOrientation is a helper method to define mock.On call
func (_e *MockOrganizer_Expecter) OrganizeImgsByOrientation() *MockOrganizer_OrganizeImgsByOrientation_Call {
	return &MockOrganizer_OrganizeImgsByOrientation_Call{Call: _e.mock.On("OrganizeImgsByOrientation")}
}

func (_c *MockOrganizer_OrganizeImgsByOrientation_Call) Run(run func()) *MockOrganizer_OrganizeImgsByOrientation_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockOrganizer_OrganizeImgsByOrientation_Call) Return(_a0 error) *MockOrganizer_OrganizeImgsByOrientation_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockOrganizer_OrganizeImgsByOrientation_Call) RunAndReturn(run func() error) *MockOrganizer_OrganizeImgsByOrientation_Call {
	_c.Call.Return(run)
	return _c
}

// SetImagesPath provides a mock function with given fields: _a0
func (_m *MockOrganizer) SetImagesPath(_a0 []string) {
	_m.Called(_a0)
}

// MockOrganizer_SetImagesPath_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetImagesPath'
type MockOrganizer_SetImagesPath_Call struct {
	*mock.Call
}

// SetImagesPath is a helper method to define mock.On call
//   - _a0 []string
func (_e *MockOrganizer_Expecter) SetImagesPath(_a0 interface{}) *MockOrganizer_SetImagesPath_Call {
	return &MockOrganizer_SetImagesPath_Call{Call: _e.mock.On("SetImagesPath", _a0)}
}

func (_c *MockOrganizer_SetImagesPath_Call) Run(run func(_a0 []string)) *MockOrganizer_SetImagesPath_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]string))
	})
	return _c
}

func (_c *MockOrganizer_SetImagesPath_Call) Return() *MockOrganizer_SetImagesPath_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockOrganizer_SetImagesPath_Call) RunAndReturn(run func([]string)) *MockOrganizer_SetImagesPath_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockOrganizer creates a new instance of MockOrganizer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockOrganizer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockOrganizer {
	mock := &MockOrganizer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
